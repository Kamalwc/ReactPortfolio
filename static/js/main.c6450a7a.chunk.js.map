{"version":3,"sources":["common/Footer.js","components/Landing.js","common/Proj.js","components/Projects.js","common/Header.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","appBar","top","bottom","Footer","classes","AppBar","position","color","className","Toolbar","Typography","title","variant","noWrap","Grid","container","item","xs","style","listStyleType","float","href","fontSize","paddingRight","margin","width","backgroundColor","extendedIcon","marginRight","transform","background","Landing","Container","maxWidth","Button","size","root","display","flexDirection","alignItems","card","button","font","Proj","props","Card","CardContent","gutterBottom","component","Divider","ButtonGroup","orientation","aria-label","target","gitHubLink","startIcon","deployedLink","viewLink","flexGrow","textAlign","palette","secondary","Projects","grow","menuButton","breakpoints","up","link","fonstSize","PrimarySearchAppBar","location","useLocation","to","pathname","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6450a7a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  }\r\n}));\r\n\r\nconst resumeLink='https://docs.google.com/document/d/1CLq31imlftL_Vqej9sjowVJzEpmJnEIrh8Y2VKFNP5M/edit?usp=sharing',\r\n      github='https://github.com/Kamalwc',\r\n      linkedin='https://www.linkedin.com/in/kamal-carmichael-42689ba7/';\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  //github profile , linkedIN, email address, phone number, resume pdf\r\n\r\n  return (\r\n\r\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs>\r\n            <ul style={{ listStyleType: 'none' }}>\r\n              <li style={{ float: 'left' }}>Profile links :</li>\r\n              <li style={{ float: 'left', padding: \"0px 20px\" }}><a href={github}><GitHubIcon color='action' fontSize=\"large\" /></a></li>\r\n              <li style={{ float: 'left', paddingRight: \"20px\" }}><a href={linkedin}><LinkedInIcon color='action' fontSize=\"large\" /></a></li>\r\n              <li style={{ float: 'left', paddingRight: \"20px\" }}><a href={resumeLink}><DescriptionIcon color='action' fontSize=\"large\" /></a></li>\r\n            </ul>\r\n            </Grid>\r\n            <Grid item xs>\r\n            <ul style={{listStyleType: 'none' }} >\r\n              <li style={{ float: 'left', paddingRight: \"20px\" }}>Contact me : </li>\r\n              <li style={{ float: 'left', paddingRight: \"20px\" }}>Email: carmichaelkw47@gmail.com</li>\r\n              <li style={{ float: 'left', paddingRight: \"20px\" }}>Phone Number: (973) 246-2613</li>\r\n            </ul>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Footer from '../common/Footer'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      width: '400px',\r\n      backgroundColor: 'blue'\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    container: {\r\n        transform: `translate(${-441}px, ${95}%)`,\r\n    }\r\n  }));\r\n\r\n  const background = {\r\n    background: `rgb(2,0,36)`,\r\n    background: `linear-gradient(90deg, rgba(2,0,36,1) 43%, rgba(10,69,167,1) 100%)`\r\n  }\r\n\r\nexport default function Landing() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={background}>\r\n            <Container maxWidth=\"sm\" className={classes.container} >\r\n                <Typography variant=\"h5\">\r\n                    <h1 style={{color:\"white\"}}>Welcome</h1>\r\n                    <p style={{color:\"white\"}}>\r\n                        Kamal is a fullstack web developer who has worked with Mongoose , Sequelize and React. He enjoys coding, skating and reading manga.\r\n                    </p>\r\n                    <Button href=\"/projects\" variant=\"contained\" size=\"large\" color=\"secondary\" className={classes.margin}>\r\n                        View Projects\r\n                    </Button>\r\n                </Typography>\r\n            </Container>\r\n        <Footer />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      \r\n    },card:{\r\n        backgroundColor:\"#3f51b5\"\r\n  \r\n        },\r\n        button:{\r\n        backgroundColor:\"white\",\r\n\r\n        },\r\n        font:{\r\n            color:'white'\r\n        }\r\n  }));\r\n  const background = {\r\n    background: `rgb(2,0,36)`,\r\n    background: `linear-gradient(90deg, rgba(2,0,36,1) 43%, rgba(10,69,167,1) 100%)`\r\n  }\r\n\r\nexport default function Proj(props) {\r\n    const classes = useStyles();\r\n// Props --> github link, deplyed app link , file path to screenshot\r\n    return (\r\n    <div className={classes.root} >\r\n        <Card className={classes.root}>\r\n            <CardContent className={classes.card}>\r\n            <Typography gutterBottom variant=\"h5\" className={classes.font}component=\"h2\">\r\n                {`${props.title}`}\r\n            </Typography>\r\n            <Divider />\r\n            <ButtonGroup orientation=\"vertical\" size=\"small\" aria-label=\"small outlined button group\">\r\n                <Button target=\"_blank\" className={classes.button}href={`${props.gitHubLink}`} startIcon={<GitHubIcon color='white' fontSize=\"large\"/>}>GitHub Link</Button>\r\n                <Button  target=\"_blank\" className={classes.button}href={`${props.deployedLink}`} startIcon={<LinkIcon color='action' fontSize=\"large\"/>}>Deployed Link</Button>\r\n                <Button target=\"_blank\" className={classes.button} href={`${props.viewLink}`} startIcon={<LaunchIcon color='action' fontSize=\"large\"/>}>View</Button>\r\n            </ButtonGroup>\r\n            </CardContent>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Footer from '../common/Footer'\r\nimport Proj from '../common/Proj'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function Projects() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs>\r\n          <Proj\r\n            title={\"Book App\"}\r\n            gitHubLink={'https://github.com/Kamalwc/bookApp'}\r\n            deployedLink={'https://katapt.herokuapp.com/'}\r\n            viewLink={'https://katapt.herokuapp.com/'}\r\n          />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Proj\r\n            title={\"Travel Advisory\"}\r\n            gitHubLink={'https://github.com/Yoloko/Travel-Advisory'}\r\n            deployedLink={'https://yoloko.github.io/Travel-Advisory/'}\r\n            viewLink={'https://drive.google.com/file/d/1xz1efj-yd15f9efBGLsDXVAb-77Mz9A_/view'}\r\n          />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Proj\r\n            title={\"Burger App\"}\r\n            gitHubLink={'https://github.com/Kamalwc/sregurb'}\r\n            deployedLink={'https://intense-tundra-41648.herokuapp.com/'}\r\n            viewLink={'https://intense-tundra-41648.herokuapp.com/'}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={1}>\r\n        <Grid item xs>\r\n          <Proj\r\n            title={\"Html template engine\"}\r\n            gitHubLink={'https://github.com/Kamalwc/luffyGonIchi'}\r\n            deployedLink={'https://www.youtube.com/watch?v=u_4Qy_wQ9cY&feature=youtu.be'}\r\n            viewLink={'https://www.youtube.com/watch?v=u_4Qy_wQ9cY&feature=youtu.be'}\r\n          />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Proj\r\n            title={\"ReadMe Generator\"}\r\n            gitHubLink={'https://github.com/Kamalwc/DoomsFnode'}\r\n            deployedLink={'https://www.youtube.com/watch?v=rvTJhsBN9us&feature=youtu.be'}\r\n            viewLink={'https://www.youtube.com/watch?v=rvTJhsBN9us&feature=youtu.be'}\r\n          />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Proj\r\n            title={\"Employee Directory\"}\r\n            gitHubLink={'https://github.com/Kamalwc/sregurb'}\r\n            deployedLink={'https://kamalwc.github.io/ReactDirectUser/'}\r\n            viewLink={'https://kamalwc.github.io/ReactDirectUser/'}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      \r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n}));\r\n\r\nconst link = {\r\n  color: 'white',\r\n  paddingRight: '10px',\r\n  fonstSize: '1.5em'\r\n}\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Kamal's Profolio\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Link to=\"/\" style={link} className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\r\n            Home\r\n          </Link>\r\n          <Link\r\n          to=\"/projects\"\r\n          style={link}\r\n          className={location.pathname === \"/projects\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          Projects\r\n        </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Landing from './components/Landing'\nimport Projects from './components/Projects'\nimport Header from './common/Header'\nconst background = {\n  background: `rgb(2,0,36)`,\n  background: `linear-gradient(90deg, rgba(2,0,36,1) 43%, rgba(10,69,167,1) 100%)`\n}\n\n\nfunction App() {\n  return (\n    <Router>\n      <div style={background}>\n        <Header/>\n        <Route exact path=\"/\" component = {Landing} />\n        <Route exact path=\"/projects\" component = {Projects} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}